---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Header from "../components/Header.astro";
import ThemeIcon from "../components/ThemeIcon.astro";
import Footer from "../components/Footer.astro";

interface Props {
    tech: string;
}

const { tech } = Astro.props;
---

<Layout
    title="Frontend Quiz: Pon a prueba tus conocimientos de HTML, CSS, JavaScript y Accesibilidad"
>
    <main class="max-w-7xl m-auto">
        <div class="top-2 w-full p-5">
            <div class="flex gap-5 flex-row justify-between items-center">
                <div class="flex items-center gap-10">
                    <img src="/assets/img/html5.svg" alt="html5" width="60px" />
                    <!-- <span class="text-stone-50 text-3xl font-semibold dark:text-stone-50 text-[#7e7e7e]">HTML5</span> -->
                </div>
                <div class="flex items-center">
                    <!-- Ensure ThemeIcon has content or proper settings -->
                    <ThemeIcon />
                </div>
            </div>
        </div>

        <div
            class="p-5 md:p-4 flex-col lg:flex-row lg:flex lg:gap-12 max-w-7xl flex lg:justify-center"
        >
            <div
                class="w-full flex lg:flex-row flex-col lg:justify-between gap-2"
                id="quiz-container"
            >
                <div class="lg:w-1/2 w-full">
                    <div
                        id="question-paragraph"
                        class="text-stone-300 italic font-thin block"
                    >
                        Question <span id="question-number">1</span> of 10
                    </div>
                    <h1
                        class="text-2xl text-semibold font-semibold text-[#7e7e7e] dark:text-stone-50 mb-10"
                        id="question-text"
                    >
                    </h1>

                    <div id="meterContainer"></div>
                </div>
                <div id="options-container" class="lg:w-1/2 w-full"></div>
            </div>
        </div>

        <a href="/" class="top-6 mt-14 relative p-5">
            <button
                type="button"
                class="dark:text-gray-100 text-blue-700 hover:text-white border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-500 dark:focus:ring-blue-800"
                >Go Back üëàüèª</button
            ></a
        >

        <h2
            class="text-2xl font-semibold text-[#7e7e7e] dark:text-stone-50 text-center underline"
        >
            Content Creators
        </h2>

        <!--Grid gallery creators -->
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
            <!-- Creator 1 -->
            <div
                class="p-4 group grid grid-rows-[1fr] grid-cols-[1fr] relative"
            >
                <a
                    href="https://portfolio-sara.vercel.app/"
                    target="_blank"
                    class="col-start-1 col-end-2 row-start-1 row-end-2"
                >
                    <img
                        src="/assets/img/saramontagud.png"
                        alt="afor digital, full stack developer"
                        class="rounded-xl"
                    />
                </a>
                <div
                    class="col-start-1 col-end-2 row-start-1 row-end-2 absolute right-0 top-[-60px]"
                >
                    <img
                        src="/assets/img/this-is-fine.webp"
                        alt="this is fine"
                        class="hidden group-hover:block rounded-xl w-20 transition-transform duration-300 transform translate-y-full group-hover:translate-y-0"
                    />
                </div>
            </div>

            <!-- Creator 2 -->
            <div
                class="p-4 group grid grid-rows-[1fr] grid-cols-[1fr] relative"
            >
                <a
                    href="https://www.kevinpowell.co/"
                    target="_blank"
                    class="col-start-1 col-end-2 row-start-1 row-end-2"
                >
                    <img
                        src="/assets/img/kevinpowell.png"
                        alt="kevin powell, css evangelist"
                        class="rounded-xl"
                    />
                </a>
                <div
                    class="col-start-1 col-end-2 row-start-1 row-end-2 absolute right-0 top-[-60px]"
                >
                    <img
                        src="/assets/img/this-is-fine.webp"
                        alt="this is fine"
                        class="hidden group-hover:block rounded-xl w-20 transition-transform duration-300 transform translate-y-full group-hover:translate-y-0"
                    />
                </div>
            </div>

            <!-- Creator 3 -->
            <div
                class="p-4 group grid grid-rows-[1fr] grid-cols-[1fr] relative"
            >
                <a
                    href="https://guillermorodas.com/"
                    target="_blank"
                    class="col-start-1 col-end-2 row-start-1 row-end-2"
                >
                    <img
                        src="/assets/img/guillermorodas.png"
                        alt="guillermorodas, full stack developer"
                        class="rounded-xl"
                    />
                </a>
                <div
                    class="col-start-1 col-end-2 row-start-1 row-end-2 absolute right-0 top-[-60px]"
                >
                    <img
                        src="/assets/img/this-is-fine.webp"
                        alt="this is fine"
                        class="hidden group-hover:block rounded-xl w-20 transition-transform duration-300 transform translate-y-full group-hover:translate-y-0"
                    />
                </div>
            </div>

            <!-- Creator 4 -->
            <div
                class="p-4 group grid grid-rows-[1fr] grid-cols-[1fr] relative"
            >
                <a
                    href="https://recursoscosmicos.com/"
                    target="_blank"
                    class="col-start-1 col-end-2 row-start-1 row-end-2"
                >
                    <img
                        src="/assets/img/carmenansio.png"
                        alt="carmen ansio, ux ui designer"
                        class="rounded-xl"
                    />
                </a>
                <div
                    class="col-start-1 col-end-2 row-start-1 row-end-2 absolute right-0 top-[-60px]"
                >
                    <img
                        src="/assets/img/this-is-fine.webp"
                        alt="this is fine"
                        class="hidden group-hover:block rounded-xl w-20 transition-transform duration-300 transform translate-y-full group-hover:translate-y-0"
                    />
                </div>
            </div>

            <!-- Creator 5 -->
            <div
                class="p-4 group grid grid-rows-[1fr] grid-cols-[1fr] relative"
            >
                <a
                    href="https://blog.gonzalopozzo.com/"
                    target="_blank"
                    class="col-start-1 col-end-2 row-start-1 row-end-2"
                >
                    <img
                        src="/assets/img/goncy.png"
                        alt="goncy, full stack developer"
                        class="rounded-xl"
                    />
                </a>
                <div
                    class="col-start-1 col-end-2 row-start-1 row-end-2 absolute right-0 top-[-60px]"
                >
                    <img
                        src="/assets/img/this-is-fine.webp"
                        alt="this is fine"
                        class="hidden group-hover:block rounded-xl w-20 transition-transform duration-300 transform translate-y-full group-hover:translate-y-0"
                    />
                </div>
            </div>

            <!-- Creator 6 -->
            <div class="p-4">
                <!-- Creator content -->
            </div>
        </div>
    </main>
</Layout>
<Footer />

<script>
    const Test1 = {
        questions: [
            {
                id: 1,
                question: "What is the purpose of the HTML 'data' attribute?",
                options: [
                    "To store custom data for an HTML element.",
                    "To define a dataset in HTML.",
                    "To link external data sources to an HTML document.",
                    "To validate input fields in HTML forms.",
                ],
                answer: "To store custom data for an HTML element.",
            },
            {
                id: 2,
                question:
                    "Explain the functionality of the 'figure' and 'figcaption' elements in HTML.",
                options: [
                    "They are used for embedding videos in HTML.",
                    "They create images with captions in HTML.",
                    "They structure forms and input elements in HTML.",
                    "They are utilized for audio playback in HTML.",
                ],
                answer: "They create images with captions in HTML.",
            },
            {
                id: 3,
                question:
                    "Describe the use of the 'details' and 'summary' elements in HTML5.",
                options: [
                    "They are used for defining mathematical formulas in HTML.",
                    "They provide a summary of a web page's content.",
                    "They structure data tables in HTML.",
                    "They create collapsible content sections in HTML.",
                ],
                answer: "They create collapsible content sections in HTML.",
            },
            {
                id: 4,
                question: "What does the 'download' attribute do in HTML?",
                options: [
                    "It initiates a file upload when clicked.",
                    "It triggers an automatic download of a linked resource.",
                    "It enables dynamic content loading in HTML documents.",
                    "It defines the font used for text in HTML elements.",
                ],
                answer: "It triggers an automatic download of a linked resource.",
            },
            {
                id: 5,
                question: "Explain the purpose of the HTML 'hidden' attribute.",
                options: [
                    "To hide content from specific browsers.",
                    "To conceal data from search engines.",
                    "To prevent content from being displayed on the web page.",
                    "To encrypt sensitive information in HTML forms.",
                ],
                answer: "To prevent content from being displayed on the web page.",
            },
            {
                id: 6,
                question: "How is the 'sandbox' attribute used in HTML?",
                options: [
                    "To create a secure environment for executing scripts in HTML documents.",
                    "To restrict the types of images that can be displayed in HTML.",
                    "To define storage limitations for cookies in HTML forms.",
                    "To prevent user interaction within an HTML document.",
                ],
                answer: "To create a secure environment for executing scripts in HTML documents.",
            },
            {
                id: 7,
                question: "What role does the 'pre' tag serve in HTML?",
                options: [
                    "It formats text exactly as it appears in the HTML code.",
                    "It specifies the preferred language for the content in HTML.",
                    "It enables printing of the HTML document.",
                    "It adjusts the font size of text in HTML elements.",
                ],
                answer: "It formats text exactly as it appears in the HTML code.",
            },
            {
                id: 8,
                question:
                    "Describe the functionality of the 'meter' element in HTML5.",
                options: [
                    "It measures the temperature of the web page.",
                    "It displays scalar measurements within a known range.",
                    "It calculates the performance metrics of an HTML document.",
                    "It formats text content based on measurement units in HTML.",
                ],
                answer: "It displays scalar measurements within a known range.",
            },
            {
                id: 9,
                question:
                    "What does the 'required' attribute do in HTML forms?",
                options: [
                    "It ensures the user's browser meets specific requirements for displaying HTML content.",
                    "It verifies the validity of the submitted data in HTML forms.",
                    "It imposes a mandatory field in an HTML form that must be filled out.",
                    "It limits the file size for attachments in HTML form submissions.",
                ],
                answer: "It imposes a mandatory field in an HTML form that must be filled out.",
            },
            {
                id: 10,
                question:
                    "Explain the purpose of the 'autocomplete' attribute in HTML forms.",
                options: [
                    "It auto-suggests possible values for an input field in HTML forms.",
                    "It completes HTML code syntax automatically.",
                    "It authenticates user credentials in HTML forms.",
                    "It optimizes the display of autocomplete options in dropdown menus.",
                ],
                answer: "It auto-suggests possible values for an input field in HTML forms.",
            },
        ],
    };

    const questionContainer = document.getElementById("question-text");
    const questionNumberContainer = document.getElementById("question-number");
    const optionsContainer = document.getElementById("options-container");

    const questionParagraph = document.getElementById("question-paragraph");

    const quizContainer = document.getElementById("quiz-container");

    let currentQuestionIndex = 0;
    let correctAnswers = 0;

    // Function to initialize the quiz
    function initializeQuiz() {
        // Shuffle the array of questions randomly
        Test1.questions.sort(() => Math.random() - 0.5);

        displayQuestion(currentQuestionIndex);
    }

    // Function to display a question and its options
    function displayQuestion(index) {
        const currentQuestion = Test1.questions[index];

        // Update question text
        questionContainer.innerText = currentQuestion.question;

        // Update question number
        questionNumberContainer.innerText = index + 1;

        // Clear options container
        optionsContainer.innerHTML = "";

        // Create option elements for each option
        currentQuestion.options.forEach((option) => {
            const optionElement = createOptionElement(option, currentQuestion);
            optionsContainer.appendChild(optionElement);
        });
    }

    // Function to create an option element
    function createOptionElement(option, currentQuestion) {
        const optionElement = document.createElement("a");
        optionElement.classList.add(
            "block",
            "dark:bg-[#3C4D67]",
            "dark:hover:bg-[#199AFC]",
            "bg-[#F3F4F6]",
            "hover:bg-[#FFFBFF]",
            "dark:text-stone-200",
            "text-[#7e7e7e]",
            "font-semibold",
            "p-4",
            "rounded-lg",
            "my-2",
            "transition",
            "duration-200",
        );
        optionElement.innerText = option;

        optionElement.addEventListener("click", () =>
            handleOptionClick(option, currentQuestion),
        );

        return optionElement;
    }

    // Function to handle option click
    function handleOptionClick(option, currentQuestion) {
        // Check if option is correct
        if (option === currentQuestion.answer) {
            correctAnswers++;
        }

        // Increment current question index
        currentQuestionIndex++;

        // Check if there are more questions or quiz is finished
        if (currentQuestionIndex < Test1.questions.length) {
            displayQuestion(currentQuestionIndex);
        } else {
            // Display quiz results or perform any final actions
            displayResults();
        }
    }

    // Function to display quiz results
    function displayResults() {
        // Clear the options container
        optionsContainer.innerHTML = "";

        questionContainer.innerText = "Quiz Completed!";
        questionContainer.classList.add(
            "dark:text-stone-200",
            "text-3xl",
            "text-[#7e7e7e]",
            "font-semibold",
            "p-4",
            "rounded-lg",
            "my-2",
            "dark:hover:bg-[#199AFC]",
            "rounded-lg",
            "my-2",
        );

        questionParagraph.style.display = "none";

        questionNumberContainer.innerText = "";

        // Display quiz results or perform any final actions
        const resultText = document.createElement("p");
        resultText.innerText = `Total Correct Answers: ${correctAnswers}`;
        resultText.classList.add(
            "dark:text-stone-200",
            "text-3xl",
            "text-[#7e7e7e]",
            "font-semibold",
            "p-4",
            "rounded-lg",
            "my-2",
            "transition",
            "duration-200",
            "text-center",
            "bg-[#F3F4F6]",
            "dark:bg-[#3C4D67]",
            "dark:hover:bg-[#199AFC]",
            "rounded-lg",
            "my-2",
        );
        optionsContainer.appendChild(resultText);

        // Create a "Play Again" button
        const playAgainButton = document.createElement("button");
        playAgainButton.innerText = "Play Again";
        playAgainButton.classList.add(
            "w-full",
            "bg-purple-400",
            "dark:text-stone-200",
            "text-3xl",
            "text-[white]",
            "font-semibold",
            "p-4",
            "rounded-lg",
            "my-2",
            "transition",
        );
        playAgainButton.addEventListener("click", startQuizAgain);
        optionsContainer.appendChild(playAgainButton);
    }

    // Function to start the quiz again
    function startQuizAgain() {
        // Reset quiz variables
        currentQuestionIndex = 0;
        correctAnswers = 0;

        // Make question-paragraph visible
        questionParagraph.style.display = "block";

        // Initialize the quiz again
        initializeQuiz();
    }

    // Initialize the quiz when the page loads
    initializeQuiz();
</script>

<style></style>
